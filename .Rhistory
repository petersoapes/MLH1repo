#quality?
)
AP_mouse_table.MLH1_HQ <- add_strain(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_subsp(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_sex(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_category(AP_mouse_table.MLH1_HQ)
#add DOB to this table?
mice.frm.meta <- AP_mouse_table.MLH1_HQ[(AP_mouse_table.MLH1_HQ$mouse %in% meta.data$mouse),]
batch.mouse.count <- table(original_DF$mouse,original_DF$Batch) #mouse count by batch
batch.mouse.count.DF <- as.data.frame(batch.mouse.count)#this has a dif str, 3 cols -- like it was melted
batch.mouse.count.DF <- batch.mouse.count.DF[!(is.na(batch.mouse.count.DF$Freq)|batch.mouse.count.DF$Freq==0),]
#subsp in metadata not fully correct
meta.data <- add_strain(meta.data)
meta.data <- add_subsp(meta.data)
meta.data <- add_sex(meta.data)
meta.data <- add_category(meta.data)
#during merging -- try to just merge a few cols:
AP_mouse_table_w.Ages <- merge(AP_mouse_table.MLH1_HQ, meta.data, by.y = "mouse", by.x = "mouse", all = TRUE)
#what are the differences between these two
#remove mice without MLH1 obs
AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[!(is.na(AP_mouse_table_w.Ages$Nmice) | AP_mouse_table_w.Ages$Nmice == ""), ]
#remove cols with bad suffix
AP_mouse_table_w.Ages <- subset(AP_mouse_table_w.Ages, select= -c(sex.y,sex.x,
subsp.y,subsp.x,
category.y,category.x, strain.x, strain.y,
mouse.1  )  )
#add all the cols back
AP_mouse_table_w.Ages <- add_strain(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_subsp(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_sex(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_category(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_species(AP_mouse_table_w.Ages)
#make sure they are all factors
AP_mouse_table.HQ$mouse <- as.factor(AP_mouse_table.HQ$mouse)
AP_mouse_table.HQ$sex <- as.factor(AP_mouse_table.HQ$sex)
AP_mouse_table.HQ$strain <- as.factor(AP_mouse_table.HQ$strain)
AP_mouse_table.HQ$subsp <-  as.factor(AP_mouse_table.HQ$subsp)
old.mice.df <- AP_mouse_table_w.Ages[(AP_mouse_table_w.Ages$age.weeks > 25),]
#remove the NAs
old.mice.df <- old.mice.df[!(is.na(old.mice.df$mouse) | old.mice.df$mouse==""), ]
#remove bad ages
#AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[( (AP_mouse_table_w.Ages$age.weeks < 25) &  (AP_mouse_table_w.Ages$age.days != 13) ) | #is.na(AP_mouse_table_w.Ages$age.weeks), ]
library(plyr)
library(dplyr)
library(raster)#for cV
library(ggplot2)
library(knitr)
library(kableExtra)
setwd("~./MLH1repo/")
#forgot why I'm reading in this metadata file
meta.data = read.csv("data/clean.Meta.Data.txt",sep = "\t", header=TRUE)
#remove all MAD (peromyscus) from meta.data
meta.data <- meta.data[ !grepl("MAD", meta.data$mouse) , ]
MLH1_data = read.csv("data/MLH1/AnonData.csv", header=TRUE)
knitr::opts_chunk$set(echo = FALSE)
#Make a mouse level table -- why are there many old mice without any MLH1 (bc these are mice which were dissected, but not imaged/quantified)
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
colnames(MLH1_data)
#make the table with ALL MLH1 obs
FULL_mouse_table_MLH1 <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3)
)
#this is most important for plotting
#reorder dataframe
MLH1_data <- MLH1_data %>%
arrange(strain, sex, mouse) %>%
mutate(Original.Name = factor(Original.Name) )
#Clean up main DF, MLH1_data
#remove duplicated data from MLH1 -- remove 1 or the two rows
#https://www.datanovia.com/en/lessons/identify-and-remove-duplicate-data-in-r/
#use distinct() in dlpyr()
MLH1_data <- MLH1_data %>% distinct(Original.Name, .keep_all = TRUE)#5216 to 4983
MLH1_data$Original.Name <- as.character(MLH1_data$Original.Name)
MLH1_data$fileName <- (MLH1_data$Original.Name)
source("~./MLH1repo/src/CommonFunc_MLH1repo.R")
#these introduce NAs
MLH1_data$n <- as.character(MLH1_data$n)
MLH1_data$nMLH1.foci<- as.character(MLH1_data$nMLH1.foci)
MLH1_data$quality<- as.character(MLH1_data$quality)
MLH1_data$n <- as.numeric(MLH1_data$n)
MLH1_data$nMLH1.foci<- as.numeric(MLH1_data$nMLH1.foci)
MLH1_data$quality<- as.numeric(MLH1_data$quality)
#remove X's and NAs
MLH1_data <- MLH1_data[ !grepl("X", MLH1_data$X) , ]
MLH1_data <- MLH1_data[!(is.na(MLH1_data$nMLH1.foci) | MLH1_data$nMLH1.foci==""), ]
#this should also have the empty column for removing X
MLH1_data <- MLH1_data[MLH1_data$nMLH1.foci != "X",]
MLH1_data <- MLH1_data[MLH1_data$nMLH1.foci != "x",]
MLH1_data <- add_mouse(MLH1_data)
MLH1_data <- add_category(MLH1_data)
MLH1_data <- add_strain(MLH1_data)
MLH1_data <- add_sex(MLH1_data)
MLH1_data <- add_subsp(MLH1_data)
#add species
MLH1_data <- add_species(MLH1_data)
colnames(MLH1_data)
head(AP_mouse_table.MLH1_HQ)
AP_mouse_table.HQ$mouse
mice.frm.meta
batch.mouse.count
head(meta.data)
#Make a mouse level table
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
#add a column with male adjusted MLH1 values (+1 to all males)
MLH1_data$adj_nMLH1.foci <- ifelse(MLH1_data$sex=="male", MLH1_data$nMLH1.foci+1, MLH1_data$nMLH1.foci)
MLH1_data$adj_nMLH1.foci <- as.numeric(MLH1_data$adj_nMLH1.foci)
#this is most important for plotting
#reorder dataframe
MLH1_data <- MLH1_data %>%
arrange(strain, sex, mouse) %>%
mutate(Original.Name = factor(Original.Name) )
#order the batches in MLH1 and original
#Make a mouse level table
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
#for issues with the total SC metrics, code in date imaged
#use the add_mouse function
#mini <- MLH1_data[1:500,]
count=1
for(i in MLH1_data$Original.Name){
print(i)
templist= strsplit(i, split="_")[[1]]
c = (templist[1])
MLH1_data$image.string[count] <-  c
#mini$image.date[count] <-  as.Date(c, format='%d%b%y')  #"%d%b%y")
count= count +1
}
#works better if dat is converted out of image
MLH1_data$date.imaged <- as.Date(MLH1_data$image.string,  format='%d%b%y')
#MLH1_data <- add_mouse2(MLH1_data)
mini.MLH1_datamouse.table <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(Random.Name),
#most recent date
oldest = min(date.imaged),
newest = max(date.imaged)
)
#make the table with ALL MLH1 obs
FULL_mouse_table_MLH1 <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3)
)
#Make a mouse level table
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
source("~./MLH1repo/src/CommonFunc_MLH1repo.R")
AP_mouse_table.MLH1_HQ <- add_strain(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_subsp(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_sex(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_category(AP_mouse_table.MLH1_HQ)
#add DOB to this table?
mice.frm.meta <- AP_mouse_table.MLH1_HQ[(AP_mouse_table.MLH1_HQ$mouse %in% meta.data$mouse),]
batch.mouse.count <- table(original_DF$mouse,original_DF$Batch) #mouse count by batch
batch.mouse.count.DF <- as.data.frame(batch.mouse.count)#this has a dif str, 3 cols -- like it was melted
batch.mouse.count.DF <- batch.mouse.count.DF[!(is.na(batch.mouse.count.DF$Freq)|batch.mouse.count.DF$Freq==0),]
#subsp in metadata not fully correct
meta.data <- add_strain(meta.data)
meta.data <- add_subsp(meta.data)
meta.data <- add_sex(meta.data)
meta.data <- add_category(meta.data)
#during merging -- try to just merge a few cols:
AP_mouse_table_w.Ages <- merge(AP_mouse_table.MLH1_HQ, meta.data, by.y = "mouse", by.x = "mouse", all = TRUE)
#what are the differences between these two
#remove mice without MLH1 obs
AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[!(is.na(AP_mouse_table_w.Ages$Nmice) | AP_mouse_table_w.Ages$Nmice == ""), ]
#remove cols with bad suffix
AP_mouse_table_w.Ages <- subset(AP_mouse_table_w.Ages, select= -c(sex.y,sex.x,
subsp.y,subsp.x,
category.y,category.x, strain.x, strain.y,
mouse.1  )  )
#add all the cols back
AP_mouse_table_w.Ages <- add_strain(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_subsp(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_sex(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_category(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_species(AP_mouse_table_w.Ages)
#make sure they are all factors
AP_mouse_table.HQ$mouse <- as.factor(AP_mouse_table.HQ$mouse)
AP_mouse_table.HQ$sex <- as.factor(AP_mouse_table.HQ$sex)
AP_mouse_table.HQ$strain <- as.factor(AP_mouse_table.HQ$strain)
AP_mouse_table.HQ$subsp <-  as.factor(AP_mouse_table.HQ$subsp)
old.mice.df <- AP_mouse_table_w.Ages[(AP_mouse_table_w.Ages$age.weeks > 25),]
#remove the NAs
old.mice.df <- old.mice.df[!(is.na(old.mice.df$mouse) | old.mice.df$mouse==""), ]
#remove juvi mice via the list
#remove bad ages
#AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[( (AP_mouse_table_w.Ages$age.weeks < 25) &  (AP_mouse_table_w.Ages$age.days != 13) ) | #is.na(AP_mouse_table_w.Ages$age.weeks), ]
View(AP_mouse_table.MLH1_HQ)
str(AP_mouse_table.MLH1_HQ)
View(old.mice.df)
View(AP_mouse_table_w.Ages)
DF.HetC.MixedModel <- AP_mouse_table_w.Ages %>% filter(species == "M.musculus")
here()
library(here)
install.packages("here")
library(here)
here()
here()
#setwd("~./MLH1repo/src/")
source(here("src","CommonFunc_MLH1repo.R") )
here()
meta.data = read.csv(here("data", "/clean.Meta.Data.txt"),sep = "\t", header=TRUE)
library(plyr)
library(dplyr)
library(raster)#for cV
library(ggplot2)
library(knitr)
library(kableExtra)
library(here)
#knitr::opts_chunk$set(echo = FALSE)
#opts_knit$set(root.dir = "~./MLH1repo/")
#setwd("~./MLH1repo/")
meta.data = read.csv(here("data", "/clean.Meta.Data.txt"),sep = "\t", header=TRUE)
#remove all MAD (peromyscus) from meta.data
meta.data <- meta.data[ !grepl("MAD", meta.data$mouse) , ]
MLH1_data = read.csv(here("data", "/MLH1/AnonData.csv"), header=TRUE)
View(AP_mouse_table_w.Ages)
View(DF.HetC.MixedModel)
View(AP_mouse_table_w.Ages)
library(plyr)
library(dplyr)
library(raster)#for cV
library(ggplot2)
library(knitr)
library(kableExtra)
library(here)
#knitr::opts_chunk$set(echo = FALSE)
#opts_knit$set(root.dir = "~./MLH1repo/")
#setwd("~./MLH1repo/")
meta.data = read.csv(here("data", "/clean.Meta.Data.txt"),sep = "\t", header=TRUE)
#remove all MAD (peromyscus) from meta.data
meta.data <- meta.data[ !grepl("MAD", meta.data$mouse) , ]
MLH1_data = read.csv(here("data", "/MLH1/AnonData.csv"), header=TRUE)
source(here("src", "/CommonFunc_MLH1repo.R") )
#during merging -- try to just merge a few cols:
AP_mouse_table_w.Ages <- merge(AP_mouse_table.MLH1_HQ, meta.data) # by.y = "mouse", by.x = "mouse", all = TRUE)
View(DF.HetC.MixedModel)
View(AP_mouse_table_w.Ages)
all.cell.MM.HQ
library(knitr)
library(ggplot2)
#library(pwr)
library(plyr)
library(lattice)
library(dplyr)
library(raster)
library(lme4)
library(nlme)
library(RLRsim)
library(ggpubr)
library(reshape2)
options(digits=2)
setwd("~.")#switch over to here()
#MLH1_data_setup_2.24.20.RData
load(file = "~./MLH1repo/data/MLH1/MLH1_data_setup_2.24.20.RData")
#load(file = "C:/Users/alpeterson7/Documents/MLH1repo/data/MLH1/MLH1_data_setup_1.31.20.RData")
#2.2.20
#load(file="C:/Users/April/Documents/MLH1repo/data/CleanBivData_1.27.20.RData")
#load(file="C:/Users/alpeterson7/Documents/MLH1repo/data/CleanBivData_1.27.20.RData")
load(file="~./MLH1repo/data/CleanBivData_19.2.20.RData")
load(file="~./MLH1repo/data/total_SC_30.12.19.RData")
#skeletonize
SC.skel = read.csv("~./MLH1repo/data/SCskel_output_feb20.csv", header = TRUE, strip.white = TRUE)
#load(file="~./MLH1repo/data/MLH1_data_setup_1.5.20.RData")
#setwd("~./MLH1repo/doc/")
#setwd("C:/Users/alpeterson7/Documents/MLH1repo/doc/")
#setwd("C:/Users/April/Documents/MLH1repo")
#load(file="data/MLH1/MLH1_data_setup.RData")
#load main data file
#load(file="C:/Users/April/Documents/MLH1repo/data/MLH1/MLH1_data_setup_1.5.20.RData")#added batch18
#load(file="C:/Users/April/Documents/MLH1repo/data/CleanBivData_1.28.20.RData")
#load(file="C:/Users/alpeterson7/Documents/MLH1repo/data/CleanBivData_1.28.20.RData")
#this MLH1 only goes up to batch16!
#load(file="C:/Users/alpeterson7/Documents/MLH1repo/data/MLH1/MLH1_data_setup_12.20.19.RData")#batch18
#load(file="C:/Users/alpeterson7/Documents/MLH1repo/data/MLH1/MLH1_data_setup_12.20.19.RData")#fixing bugs, formating
#load(file="data/MLH1/MLH1_data_setup_12.3.19.RData")#removed exclude mice
#load(file="data/MLH1/MLH1_data_setup_11.12.19.RData")#added batch17
#load(file="data/MLH1/MLH1_data_setup_11.11.19.RData")#deleted DUP image
#load(file="data/MLH1/MLH1_data_setup_9.26.19.RData")#added batch16
#load(file="data/MLH1/MLH1_data_setup_8.29.19.RData") #
#load(file="data/MetaData.RData") #this was replacing most updated data file
#load functions
source("~./MLH1repo/src/CommonFunc_MLH1repo.R")
#AP_mouse_table excluide Qual5 cells
DF.HetC.MixedModel.HQ <- AP_mouse_table.MLH1_HQ
View(DF.HetC.MixedModel.HQ)
colnames(DF.HetC.MixedModel.HQ)
View(fomo.male_mouse.av)
male_MLH1mouse.av <- subset(AP_mouse_table_w.Ages, select= -c(sex.y,sex.x,
subsp.y,subsp.x,
category.y,category.x, strain.x,
strain.y, mouse.1  )  )
male_MLH1mouse.av <- add_sex(male_MLH1mouse.av)
male_MLH1mouse.av <- add_strain(male_MLH1mouse.av)
male_MLH1mouse.av <- add_subsp(male_MLH1mouse.av)
male_MLH1mouse.av <- add_species(male_MLH1mouse.av)
fomo.male_mouse.av <-  male_MLH1mouse.av %>% filter(sex== "male") %>% filter(species == "M.musculus")
fomo.male_mouse.av$subsp <- factor(fomo.male_mouse.av$subsp, ordered = FALSE)
fomo.male_mouse.av$sex <- factor(fomo.male_mouse.av$sex, ordered = FALSE)
fomo.male_mouse.av$strain <- factor(fomo.male_mouse.av$strain, ordered = FALSE)
fomo.male_mouse.av$species <- factor(fomo.male_mouse.av$species, ordered = FALSE)
Musc.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Musc")
Mol.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Mol")
#Dom version
Dom.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Dom")
View(male_MLH1mouse.av)
View(AP_mouse_table_w.Ages)
View(AP_mouse_table.MLH1_HQ)
#Make a mouse level table
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci, na.rm=TRUE),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
#for issues with the total SC metrics, code in date imaged
#use the add_mouse function
#mini <- MLH1_data[1:500,]
count=1
for(i in MLH1_data$Original.Name){
# print(i)
templist= strsplit(i, split="_")[[1]]
c = (templist[1])
MLH1_data$image.string[count] <-  c
#mini$image.date[count] <-  as.Date(c, format='%d%b%y')  #"%d%b%y")
count= count +1
}
#works better if dat is converted out of image
MLH1_data$date.imaged <- as.Date(MLH1_data$image.string,  format='%d%b%y')
#MLH1_data <- add_mouse2(MLH1_data)
#mini.MLH1_datamouse.table <- ddply(MLH1_data, c("mouse"), summarise,
#                        Nmice = length(unique(mouse)),
#                        Ncells  = length(Random.Name),
#                        #most recent date
#                        oldest = min(date.imaged),
#                        newest = max(date.imaged)
#)
#Make a mouse level table
AP_mouse_table.MLH1_HQ <- ddply(MLH1_data[MLH1_data$quality < 5,], c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci, na.rm=TRUE), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci, na.rm=TRUE),
var = as.numeric(format(round(   var(adj_nMLH1.foci, na.rm=TRUE),3), nsmall=3)),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3),
oldest.image.date = min(date.imaged),
newest.image.date = max(date.imaged)
#quality?
)
#source("~./MLH1repo/src/CommonFunc_MLH1repo.R")
AP_mouse_table.MLH1_HQ <- add_strain(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_subsp(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_sex(AP_mouse_table.MLH1_HQ)
AP_mouse_table.MLH1_HQ <- add_category(AP_mouse_table.MLH1_HQ)
#add DOB to this table?
mice.frm.meta <- AP_mouse_table.MLH1_HQ[as.character(AP_mouse_table.MLH1_HQ$mouse) %in% as.character(meta.data$mouse),]
batch.mouse.count <- table(original_DF$mouse,original_DF$Batch) #mouse count by batch
batch.mouse.count.DF <- as.data.frame(batch.mouse.count)#this has a dif str, 3 cols -- like it was melted
batch.mouse.count.DF <- batch.mouse.count.DF[!(is.na(batch.mouse.count.DF$Freq)|batch.mouse.count.DF$Freq==0),]
#subsp in metadata not fully correct
meta.data <- add_strain(meta.data)
meta.data <- add_subsp(meta.data)
meta.data <- add_sex(meta.data)
meta.data <- add_category(meta.data)
#during merging -- try to just merge a few cols:
AP_mouse_table_w.Ages <- merge(AP_mouse_table.MLH1_HQ, meta.data)
#this should be transfering the image dataes!
#don't use by, that makes duplicate cols
# by.y = "mouse", by.x = "mouse", all = TRUE)
#what are the differences between these two
#remove mice without MLH1 obs
AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[!(is.na(AP_mouse_table_w.Ages$Nmice) | AP_mouse_table_w.Ages$Nmice == ""), ]
#remove cols with bad suffix
#AP_mouse_table_w.Ages <- subset(AP_mouse_table_w.Ages, select= -c(sex.y,sex.x,
#                            subsp.y,subsp.x,
#                    category.y,category.x, strain.x, strain.y,
#                    mouse.1  )  )
#add all the cols back
AP_mouse_table_w.Ages <- add_strain(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_subsp(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_sex(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_category(AP_mouse_table_w.Ages)
AP_mouse_table_w.Ages <- add_species(AP_mouse_table_w.Ages)
#make sure they are all factors - this was breaking the kniting
#AP_mouse_table.HQ$mouse <- as.factor(AP_mouse_table.HQ$mouse)
#AP_mouse_table.HQ$sex <- as.factor(AP_mouse_table.HQ$sex)
#AP_mouse_table.HQ$strain <- as.factor(AP_mouse_table.HQ$strain)
#AP_mouse_table.HQ$subsp <-  as.factor(AP_mouse_table.HQ$subsp)
old.mice.df <- AP_mouse_table_w.Ages[(AP_mouse_table_w.Ages$age.weeks > 25),]
#remove the NAs
old.mice.df <- old.mice.df[!(is.na(old.mice.df$mouse) | old.mice.df$mouse==""), ]
#remove juvi mice via the list
#remove bad ages
#AP_mouse_table_w.Ages <- AP_mouse_table_w.Ages[( (AP_mouse_table_w.Ages$age.weeks < 25) &  (AP_mouse_table_w.Ages$age.days != 13) ) | #is.na(AP_mouse_table_w.Ages$age.weeks), ]
View(AP_mouse_table_w.Ages)
#AP_mouse_table.MLH1_HQ
#find the table that includes the las image data
male_MLH1mouse.av <- subset(AP_mouse_table_w.Ages, select= -c(sex.y,sex.x,
subsp.y,subsp.x,
category.y,category.x, strain.x,
strain.y, mouse.1  )  )
colnames(AP_mouse_table_w.Ages)
#AP_mouse_table.MLH1_HQ
#find the table that includes the las image data
male_MLH1mouse.av <- AP_mouse_table_w.Ages
male_MLH1mouse.av <- add_sex(male_MLH1mouse.av)
male_MLH1mouse.av <- add_strain(male_MLH1mouse.av)
male_MLH1mouse.av <- add_subsp(male_MLH1mouse.av)
male_MLH1mouse.av <- add_species(male_MLH1mouse.av)
fomo.male_mouse.av <-  male_MLH1mouse.av %>% filter(sex== "male") %>% filter(species == "M.musculus")
fomo.male_mouse.av$subsp <- factor(fomo.male_mouse.av$subsp, ordered = FALSE)
fomo.male_mouse.av$sex <- factor(fomo.male_mouse.av$sex, ordered = FALSE)
fomo.male_mouse.av$strain <- factor(fomo.male_mouse.av$strain, ordered = FALSE)
fomo.male_mouse.av$species <- factor(fomo.male_mouse.av$species, ordered = FALSE)
Musc.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Musc")
Mol.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Mol")
#Dom version
Dom.male_mouse.av <-  fomo.male_mouse.av %>% filter(sex== "male") %>% filter(subsp == "Dom")
bep <- merge(  fomo.male_mouse.av,   totSC.mouse.av.table)
View(bep)
Neg.control
median(bep$oldest.image.date)
bep$date.cut.off <- ifelse( bep$oldest.image.date < "2017-08-03", 0, 1 )
View(bep)
Neg.control <- ggplot(bep, aes(x=mean.skel, y=mean.bin, color=strain))+geom_point()+
scale_color_manual(values=colors_of_strains)+ggtitle("Total SC by mean CO\nMouse Means")+facet_wrap(~date.cut.off)
Neg.control
bep$date.cut.off <- ifelse( bep$oldest.image.date < "2017-02-07", 0, 1 )
Neg.control <- ggplot(bep, aes(x=mean.skel, y=mean.bin, color=strain))+geom_point()+
scale_color_manual(values=colors_of_strains)+ggtitle("Total SC by mean CO\nMouse Means")+facet_wrap(~date.cut.off)
Neg.control
Neg.control <- ggplot(bep, aes(x=mean.skel, y=mean.bin, color=strain))+geom_point()+
scale_color_manual(values=colors_of_strains)+ggtitle("Total SC by mean CO\nMouse Means")
Neg.control
X.by.texas <- ggplot(bep, aes(x=mean.skel, y=mean_co, color=strain))+geom_point()+
scale_color_manual(values=colors_of_strains)+ggtitle("Total SC by mean CO\nMouse Means")
X.by.texas
Neg.control <- ggplot(bep, aes(x=mean.skel, y=mean.bin, color=strain))+geom_point()+
scale_color_manual(values=colors_of_strains)+ggtitle("Total SC by mean CO\nMouse Means")
Neg.control
