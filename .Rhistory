AP_mouse_table1.2.3_5orMore$subsp))
AP_mouse_table1.2.3_5orMore
full.123 <- aov(mean_co ~ subsp+strain:subsp+sex:strain+mouse:sex, data = AP_mouse_table1.2.3_5orMore)
full.orig.vals <-summary(full.orig)
full.123.vals <-summary(full.123)
full.orig.vals
full.123.vals
summary(full.orig)
summary(aov(mean_co ~ subsp+strain:subsp+sex:strain+mouse:sex, data = AP_mouse_table))
full.orig <- aov(mean_co ~ subsp+strain:subsp+sex:strain+mouse:sex, data = MLH1_data)
View(MLH1_data)
MLH1_data.123 <- MLH1_data[MLH1_data$quality <4, ]
full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex, data = MLH1_data)
summary(full.orig)
summary(full.123)
View(MLH1_data.123)
MLH1_data.123 <- na.omit(MLH1_data.123)
full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex, data = MLH1_data.123)
summary(full.123)
summary(full.orig)
unique(MLH1_data$subsp)
MLH1_data$subsp <-  ifelse(grepl("Spic", MLH1_data$subsp), "outgroup",
ifelse(grepl("Spretus", MLH1_data$subsp), "outgroup",
MLH1_data$subsp))
MLH1_data.123 <- MLH1_data[MLH1_data$quality <4, ]
MLH1_data.123 <- na.omit(MLH1_data.123)
full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex + quality, data = MLH1_data)
full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex + quality, data = MLH1_data)
full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex + quality, data = MLH1_data.123)
summary(full.orig)
summary(full.123)
str(MLH1_data)
male_full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex + quality, data = MLH1_data[MLH1_data$sex == "male", ] )
male_full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data[MLH1_data$sex == "male", ] )
summary(male_full.orig)
female_full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data[MLH1_data$sex == "female", ])
summary(female_full.orig)
male_full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data[MLH1_data$sex == "male", ] )
female_full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data[MLH1_data$sex == "female", ])
summary(male_full.123)
summary(FEmale_full.123)
summary(female_full.123)
summary(full.orig)
summary(full.123)
summary(male_full.orig)
summary(female_full.orig)
summary(female_full.123)
female_full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data[MLH1_data$sex == "female", ])
male_full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data.123[MLH1_data.123$sex == "male", ] )
female_full.123 <- aov(nMLH1.foci  ~ subsp+strain:subsp+ mouse:strain + quality, data = MLH1_data.123[MLH1_data.123$sex == "female", ])
summary(female_full.123)
summary(female_full.orig)
male_full.orig
summary(male_full.orig)
summary(male_full.123)
aov_sum.sum <- summary(female_full.123)
aov_sum.sum <- summary(female_full.123)
aov_sum.sum
plot(full.orig)
full.orig <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex + quality, data = MLH1_data)
plot(full.orig)
plot(full.123)
simp.model <- aov(nMLH1.foci  ~ subsp+strain:subsp+sex:strain+mouse:sex, data = MLH1_data)
plot(simp.model)
plot(residuals(simp.model[["Within"]])~fitted(simp.model[["Within"]]))
str(simp.model)
plot(simp.model$residuals ~ simp.model$fitted.values)
b <- plot(simp.model$residuals ~ simp.model$fitted.values)
b
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggplot2)
# histograms, to check out the distribution within each group
ggplot(warpbreaks, aes(x=breaks)) +
geom_histogram(bins=10) +
facet_grid(wool ~ tension) +
theme_classic()
# boxplot, to highlight the group means
ggplot(warpbreaks, aes(y=breaks, x=tension, fill = wool)) +
geom_boxplot() +
theme_classic()
kable(summary(female_full.123))
library(kable)
library(knitr)
kable(summary(female_full.123))
str(summary(female_full.123))
y<-summary(female_full.123)
y[[1]]$'Sum Sq'
y[[1]]
kable(y[[1]])
kable(y[[1]],digits = 3, format = "pandoc", caption = "ANOVA table")
kable(y[[1]],digits = 2, format = "pandoc", caption = "ANOVA table")
kable(y[[1]],digits = 2, format = "pandoc", caption = "Female123 ANOVA table")
kable(summary(female_full.123)[[1]],digits = 2, format = "pandoc", caption = "Female123 ANOVA table")
kable(summary(male_full.123)[[1]],digits = 2, format = "pandoc", caption = "Male123 ANOVA table")
kable(summary(male_full.orig)[[1]],digits = 2, format = "pandoc", caption = "Male Full ANOVA table")
kable(summary(female_full.orig)[[1]],digits = 2, format = "pandoc", caption = "Female Full ANOVA table")
model1 <- lme(mean_co ~ sex * subsp, data=mixmodmouse_data, random=list(strain=pdDiag(~sex)) )
mixmodmouse_data <- AP_mouse_table[(AP_mouse_table$subsp == "Musc" | AP_mouse_table$subsp == "Dom"),  ]
AP_mouse_table1.2.3_5orMore
AP_mouse_table$sex <- factor(AP_mouse_table$sex, levels = c("male", "female"))
MMfull <- lme(mean_co ~ sex * subsp, data=AP_mouse_table, random=list(strain=pdDiag(~sex)) )
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
AP_mouse_table1.2.3
AP_mouse_table1.2.3$sex <- factor(AP_mouse_table1.2.3$sex, levels = c("male", "female"))
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
str(AP_mouse_table1.2.3)
AP_mouse_table$subsp <-  factor(AP_mouse_table$subsp, levels = c("Dom", "Musc", "Cast", "outgroup"))
AP_mouse_table1.2.3$sex <- factor(AP_mouse_table1.2.3$sex, levels = c("male", "female"))
AP_mouse_table1.2.3$subsp <-  factor(AP_mouse_table1.2.3$subsp, levels = c("Dom", "Musc", "Cast", "outgroup"))
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
str(AP_mouse_table1.2.3)
AP_mouse_table1.2.3 <- na.omit(AP_mouse_table1.2.3)
AP_mouse_table1.2.3$sex <- factor(AP_mouse_table1.2.3$sex, levels = c("male", "female"))
AP_mouse_table1.2.3$subsp <-  factor(AP_mouse_table1.2.3$subsp, levels = c("Dom", "Musc", "Cast", "outgroup"))
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
MM123.5 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3_5orMore, random=list(strain=pdDiag(~sex)) )
str(AP_mouse_table1.2.3)
AP_mouse_table1.2.3
AP_mouse_table1.2.3$subsp <-  factor(AP_mouse_table1.2.3$subsp, levels = c("Dom", "Musc", "Cast"))
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
AP_mouse_table1.2.3AP_mouse_table1.2.3_5orMore
AP_mouse_table1.2.3 <- AP_mouse_table1.2.3[(AP_mouse_table1.2.3$subsp == "Musc" | AP_mouse_table1.2.3$subsp == "Dom"),  ]
MM123 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3, random=list(strain=pdDiag(~sex)) )
AP_mouse_table1.2.3_5orMore <- AP_mouse_table1.2.3[AP_mouse_table1.2.3$Ncells > 5, ]
MM123.5 <- lme(mean_co ~ sex * subsp, data=AP_mouse_table1.2.3_5orMore, random=list(strain=pdDiag(~sex)) )
summary(MM123)
jj <- summary(MM123)
jj$groups
jj$terms
jj[1]
jj[4]
str(MM123.5)
str(AP_mouse_table1.2.3_5orMore)
aa <- summary(MMfull)
bb <- summary(MM123)
cc <- summary(MM123.5)
aa
AP_mouse_table <- AP_mouse_table[(AP_mouse_table$subsp == "Musc" | AP_mouse_table$subsp == "Dom"),  ]
MMfull <- lme(mean_co ~ sex * subsp, data=AP_mouse_table, random=list(strain=pdDiag(~sex)) )
aa <- summary(MMfull)
aa
bb
cc
#
library(knitr)
library(ggplot2)
#library(pwr)
library(plyr)
library(lattice)
library(dplyr)
setwd("C:/Users/alpeterson7/Documents/MLH1repo")
#setwd("C:/Users/April/Desktop/MLH1repo")
load(file="MLH1_data_setup.RData")
View(MLH1_data)
.685+.004
.686+.024
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1data/ALP_MouseMetadata.csv")
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1repo/ALP_MouseMetadata.csv")
View(full_meta_data)
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1repo/ALP_MouseMetadata.csv")
source("src/Func_addSex.R")
full_meta_data <- add_sex(full_meta_data)
setwd("C:/Users/alpeterson7/Documents/MLH1repo/")
source("src/Func_addSex.R")
full_meta_data <- add_sex(full_meta_data)
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1repo/ALP_MouseMetadata.csv")
source("src/Func_addSex.R")
full_meta_data <- add_sex(full_meta_data)
View(full_meta_data)
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
full_meta_data$age_weeks[t] <- vv
full_meta_data$age_hours[t] <- hh
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$maternal.age..DOB.[t], format= '%m/%d/%Y')
#  hh <- as.numeric(difftime(fomt_euth, as.Date(meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
gg <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- gg
}
str(full_meta_data)
full_meta_data$mouse <- as.character(full_meta_data)
full_meta_data$mouse <- as.character(full_meta_data$mouse)
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
full_meta_data$age_weeks[t] <- vv
full_meta_data$age_hours[t] <- hh
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$maternal.age..DOB.[t], format= '%m/%d/%Y')
#  hh <- as.numeric(difftime(fomt_euth, as.Date(meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
gg <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- gg
}
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
full_meta_data$age_weeks[t] <- vv
full_meta_data$age_hours[t] <- hh
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$mat.DOB[t], format= '%m/%d/%Y')
#  hh <- as.numeric(difftime(fomt_euth, as.Date(meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
gg <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- gg
}
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1repo/ALP_MouseMetadata.csv")
source("src/Func_addSex.R")
full_meta_data <- add_sex(full_meta_data)
full_meta_data$mouse <- as.character(full_meta_data$mouse)
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
full_meta_data$age_weeks[t] <- vv
full_meta_data$age_hours[t] <- hh
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$mat.DOB[t], format= '%m/%d/%Y')
#  hh <- as.numeric(difftime(fomt_euth, as.Date(meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
gg <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- gg
}
View(full_meta_data)
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
full_meta_data$age_weeks[t] <- vv
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$mat.DOB[t], format= '%m/%d/%Y')
pat_dob <- as.Date(full_meta_data$pat.DOB[t], format= '%m/%d/%Y')
mm.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
pp.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),pat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- mm.dob
full_meta_data$pat_age_wk[t] <- pp.dob
}
full_meta_data = read.csv("C:/Users/alpeterson7/Documents/MLH1repo/ALP_MouseMetadata.csv")
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
#full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
# full_meta_data$age_weeks[t] <- vv
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$mat.DOB[t], format= '%m/%d/%Y')
pat_dob <- as.Date(full_meta_data$pat.DOB[t], format= '%m/%d/%Y')
mm.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
pp.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),pat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- mm.dob
full_meta_data$pat_age_wk[t] <- pp.dob
}
full_meta_data$mouse <- as.character(full_meta_data$mouse)
for( t in 1:length(full_meta_data$mouse)){
euth_date = strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
#full_meta_data$raw_euth_date[t] <- strsplit(full_meta_data$mouse[t], split="_")[[1]][1]
fomt_euth <- as.Date(strsplit(full_meta_data$mouse[t], split="_")[[1]][1], format= '%d%b%y')
fomt_euth_nrm <- as.Date(fomt_euth, "%Y-%m-%d")
vv <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="weeks" )#whoo, this works
hh <- as.numeric(difftime(fomt_euth, as.Date(full_meta_data$DOB[t], '%m/%d/%Y')), units="hours" )
# full_meta_data$age_weeks[t] <- vv
#mat age, DOB -Mat_dob
mat_dob <- as.Date(full_meta_data$mat.DOB[t], format= '%m/%d/%Y')
pat_dob <- as.Date(full_meta_data$pat.DOB[t], format= '%m/%d/%Y')
mm.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),mat_dob), units="weeks" )
pp.dob <- as.numeric(difftime(as.Date(full_meta_data$DOB[t], '%m/%d/%Y'),pat_dob), units="weeks" )
full_meta_data$mat_age_wk[t] <- mm.dob
full_meta_data$pat_age_wk[t] <- pp.dob
}
View(full_meta_data)
library(knitr)
library(ggplot2)
#library(pwr)
library(plyr)
library(lattice)
library(dplyr)
setwd("C:/Users/alpeterson7/Documents/MLH1repo")
#setwd("C:/Users/April/Desktop/MLH1repo")
load(file="MLH1_data_setup.RData")
unique(MLH1_data$Batch)
#set the order of another column, based on another variable (so that when)
MLH1_data <- MLH1_data %>%
arrange(strain, sex, category, mouse) %>%
mutate(Original.Name = factor(Original.Name)) #another category that you want the order to match
MLH1_data <- with(MLH1_data, MLH1_data[order(sex, strain),])
# sort your dataframe, by the focal categories
MLH1_data$mouse <- factor(MLH1_data$mouse, levels=unique(MLH1_data$mouse))
#use the above line for when order is out of wak
#count the non-quality measures,  #remove non qualit
#length(MLH1_data[ !(is.na(MLH1_data$quality) | MLH1_data$quality==""), ] )  #15 rows with out quality scores, remove.
#MLH1_data <- MLH1_data[ !(is.na(MLH1_data$quality) | MLH1_data$quality==""), ]
#MLH1_by_F_strain <- MLH1_data[MLH1_data$sex == "female", ]
#MLH1_by_M_strain <- MLH1_data[MLH1_data$sex == "male", ]
#MLH1_data <- MLH1_data %>%
#  arrange(category) %>%
#  mutate(Original.Name = factor(Original.Name)) #another category that you want the order to match
#MLH1_data <- with(MLH1_data, MLH1_data[order(category),])
table(MLH1_data$Batch)
View(MLH1_data)
table(MLH1_data$category)
library(knitr)
library(ggplot2)
#library(pwr)
library(plyr)
library(lattice)
library(dplyr)
setwd("C:/Users/alpeterson7/Documents/MLH1repo")
#setwd("C:/Users/April/Desktop/MLH1repo")
load(file="MLH1_data_setup.RData")
load(file="MLH1_data_setup.RData")
table(MLH1_data$category)
### to integrate 'pass'/fail
### this should be in setup data
#quant_status (this isn't saving)
#for(i in 1:length(MLH1_data$mouse)){
#  MLH1_data$quant_status[i] <- ifelse( is.element(MLH1_data$mouse[i], pass_mice), "pass", NA)
#}
#what is the purpose of this block
df_list <- split(MLH1_data, (MLH1_data$category))
#remove sections which are in category but have no data
#df_list <- df_list[ -c(7,14,16,22) ]
#7: PERC male, 12: KAZ female! (14:CAST female, fake data) 16:HMI female
#df list, is a list of df's which were split() from BIG df by category
df_list
o=0
i=0
MLH1_data$quant_status <- as.factor(MLH1_data$quant_status)
for(i in 1:length(MLH1_data$mouse)){
MLH1_data$quant_status[i] <- ifelse( is.element(MLH1_data$mouse[i], pass_mice), "pass", NA)
}
### to integrate 'pass'/fail
### this should be in setup data
#quant_status (this isn't saving)
for(i in 1:length(MLH1_data$mouse)){
MLH1_data$quant_status[i] <- ifelse( is.element(MLH1_data$mouse[i], pass_mice), "pass", NA)
}
#what is the purpose of this block
df_list <- split(MLH1_data, (MLH1_data$category))
#remove sections which are in category but have no data
#df_list <- df_list[ -c(7,14,16,22) ]
#7: PERC male, 12: KAZ female! (14:CAST female, fake data) 16:HMI female
#df list, is a list of df's which were split() from BIG df by category
df_list
o=0
i=0
MLH1_data$quant_status <- as.factor(MLH1_data$quant_status)
#make a new empty df. create a ddply thing with mean calculations (this is like a list for matching up later)
for(i in 1:(length(df_list))){
# only include data with quality values, then create a ddply for specific sub-df that calqs mean by each mouse
df_list[[i]] <- df_list[[i]][!(is.na(df_list[[i]]$quality) | df_list[[i]]$quality==""), ]
sub_mouse_means <- ddply(df_list[[i]], .(mouse), summarise,
mouse_nMLH1 = mean(adj_nMLH1.foci)
)
# this loop is going though each row of dataframes within the df.list and assigning the mouse mean
for(o in 1:length(df_list[[i]]$Original.Name)){
df_list[[i]]$mouse_mean_MLH1[o] <- sub_mouse_means$mouse_nMLH1[ (df_list[[i]]$mouse[o] == sub_mouse_means$mouse) ]
}
}
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(data = df_list[[h]], y= adj_nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
+ geom_jitter()
+ facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") + scale_fill_manual(values=c(NA, "red"), breaks=NULL)
# +    geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
str(MLH1_data)
str(df_list)
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(data = df_list[[h]], y= adj_nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
+ geom_jitter()
+ facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") + scale_fill_manual(values=c(NA, "red"), breaks=NULL)
# +    geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
oo<- ggplot(data = df_list[[h]], y= adj_nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
+ geom_jitter()
oo<- ggplot(data = df_list[[h]], y= adj_nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
+ geom_point()
pf <- ggplot(data = df_list[[h]], y= adj_nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)+ geom_jitter()
pf
pf <- ggplot(data = df_list[[h]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(y= adj_nMLH1.foci, x= quality)
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(y= adj_nMLH1.foci, x= quality)
df_list[[1]]
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(y= adj_nMLH1.foci, x= quality)
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(y= nMLH1.foci, x= quality)
colnames(df_list[[1]])
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch)), width = 0.25)+ geom_point(data=df_list[[1]], y= nMLH1.foci, x= quality)
pf <- ggplot(data = df_list[[1]], y= nMLH1.foci, x= quality, aes(colour = factor(Batch)), width = 0.25)+ geom_point()
pf
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch))) + geom_point( aes(y= nMLH1.foci, x= quality))
pf
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch))) + geom_jitter( aes(y= nMLH1.foci, x= quality))
pf
pf <- ggplot(data = df_list[[1]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(aes(y= adj_nMLH1.foci, x= quality))
+ facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") + scale_fill_manual(values=c(NA, "red"), breaks=NULL)
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(data = df_list[[h]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(aes(y= adj_nMLH1.foci, x= quality))
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
+ facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") + scale_fill_manual(values=c(NA, "red"), breaks=NULL)
# +    geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
for (h in 1:length(df_list)) {
pf <- ggplot(data = df_list[[h]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(aes(y= adj_nMLH1.foci, x= quality))
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
#  + facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") +scale_fill_manual(values=c(NA, "red"), breaks=NULL)
# +    geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(df_list[[h]],(aes(y= adj_nMLH1.foci, x= quality)))
pf <- pf +geom_rect(data = df_list[[h]], aes(fill=quant_status), xmin=-100, xmax=100, ymin=-100, ymax=100, alpha=0.005)
pf <- pf + geom_jitter(width = 0.25, aes(colour = factor(Batch)) )
pf <- pf + geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
pf <- pf + facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") +
scale_fill_manual(values=alpha(c("red"), .005), breaks=NULL)
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
plot_list[[1]]
df_list[[6]]
df_list[[16]]
df_list[[17]]
df_list[[14]]
df_list[[22]]
df_list[[21]]
df_list[[20]]
df_list[[19]]
df_list[[18]]
df_list[[17]]
df_list[[7]]
df_list[[6]]
df_list[[7]]
df_list[[8]]
df_list <- df_list[ -c(7,16,22) ]
df_list
i=0
MLH1_data$quant_status <- as.factor(MLH1_data$quant_status)
for(i in 1:(length(df_list))){
# only include data with quality values, then create a ddply for specific sub-df that calqs mean by each mouse
df_list[[i]] <- df_list[[i]][!(is.na(df_list[[i]]$quality) | df_list[[i]]$quality==""), ]
sub_mouse_means <- ddply(df_list[[i]], .(mouse), summarise,
mouse_nMLH1 = mean(adj_nMLH1.foci)
)
# this loop is going though each row of dataframes within the df.list and assigning the mouse mean
for(o in 1:length(df_list[[i]]$Original.Name)){
df_list[[i]]$mouse_mean_MLH1[o] <- sub_mouse_means$mouse_nMLH1[ (df_list[[i]]$mouse[o] == sub_mouse_means$mouse) ]
}
}
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(data = df_list[[h]], aes(colour = factor(Batch)), width = 0.25)+ geom_jitter(aes(y= adj_nMLH1.foci, x= quality))
# +   geom_rect(data = df_list[[h]], aes(fill=as.factor(quant_status)), alpha=0.5)
#  + facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") +scale_fill_manual(values=c(NA, "red"), breaks=NULL)
# +    geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
plot_list = list()
for (h in 1:length(df_list)) {
pf <- ggplot(df_list[[h]],(aes(y= adj_nMLH1.foci, x= quality)))
pf <- pf +geom_rect(data = df_list[[h]], aes(fill=quant_status), xmin=-100, xmax=100, ymin=-100, ymax=100, alpha=0.005)
pf <- pf + geom_jitter(width = 0.25, aes(colour = factor(Batch)) )
pf <- pf + geom_hline(yintercept = c( mean(df_list[[h]]$adj_nMLH1.foci) ), color="black" )
pf <- pf + facet_wrap(~ mouse) + geom_hline(aes(yintercept = mouse_mean_MLH1), color="red") +
scale_fill_manual(values=alpha(c("red"), .005), breaks=NULL)
#theme for indiviual mice,
#+ theme(plot.background = element_rect(fill = "green"))
plot_list[[h]] =   pf
}
geom_hline(aes(yintercept = med, group = gr), colour = 'red')
for (gg in 1:length(plot_list) ){
show(plot_list[gg])
#invisible(lapply(obj, function(x) plot(x,main="some plot")))
}
