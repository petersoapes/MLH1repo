}
list.Chrm1.Total.SC <- Chrm1_DF$fileName[(Chrm1_DF$fileName %in% total_SC$fileName)]
source.total.SC <- total_SC[(total_SC$fileName %in% Chrm1_DF$fileName),]
ii <- merge(source.total.SC, Chrm1_DF, by = "fileName")
ii$SC.tot_Chrm1 <- ii$chromosomeLength / ii$bin_size
hand_measures = read.csv("data/Hand_Measures.csv")
hand_measures$fileName <- as.character(hand_measures$fileName)
list.handMeasure.Total.SC <- hand_measures[(hand_measures$fileName %in% total_SC$fileName),]
source.tot.SC2 <- hand_measures[(hand_measures$fileName %in% total_SC$fileName),]
newone <- merge(source.tot.SC2, total_SC, by = "fileName")
newone$ratio <- newone$SC.length / newone$bin_size
newone$ratio2 <- newone$SC.length / newone$skel_size
newone$PER.cent <- newone$centromere / newone$SC.length
plain <- ggplot(newone, aes(y=SC.length, x = PER.cent) ) +
geom_point()
newone2 <- newone[newone$chromosome.class != "",]
mouse_level_SCfeatures <- ddply(newone2, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(nMLH1.foci)
)
library(plyr)
library(dplyr)
mouse_level_SCfeatures <- ddply(newone2, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(nMLH1.foci)
)
mouse_level_SCfeatures <- ddply(newone2, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName)
)
mouse_level_SCfeatures
mouse_level_SCfeatures <- ddply(newone2, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(chromosomeLength)
)
mouse_level_SCfeatures <- ddply(newone2, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length)
)
mouse_level_SCfeatures
View(newone2)
mouse_level_SCfeatures <- ddply(newone, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length)
)
mouse_level_SCfeatures
clean_mouse_level_SCfeatures <- mouse_level_SCfeatures[mouse_level_SCfeatures$Ncells == 24,]
clean_mouse_level_SCfeatures
clean_mouse_level_SCfeatures <- clean_mouse_level_SCfeatures[clean_mouse_level_SCfeatures$total_manual_SC != NA,]
clean_mouse_level_SCfeatures
clean_mouse_level_SCfeatures <- mouse_level_SCfeatures[mouse_level_SCfeatures$Ncells == 24,]
is.na(clean_mouse_level_SCfeatures$total_manual_SC)
clean_mouse_level_SCfeatures <- clean_mouse_level_SCfeatures[is.na(clean_mouse_level_SCfeatures$total_manual_SC) == FALSE,]
clean_mouse_level_SCfeatures
newone$
j
mouse_level_SCfeatures <- ddply(newone, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length),
bin_size = bin_size,
skel_size = skel_size
)
mouse_level_SCfeatures
mouse_level_SCfeatures <- ddply(newone, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length),
bin_size = sum(bin_size),
skel_size = sum(skel_size)
)
mouse_level_SCfeatures
mouse_level_SCfeatures <- ddply(newone, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length),
bin_size = as.character(bin_size),
skel_size = as.character(skel_size)
)
mouse_level_SCfeatures <- ddply(newone, c("fileName"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(fileName),
total_manual_SC = sum(SC.length),
bin_size = mean(bin_size),
skel_size = mean(skel_size)
)
mouse_level_SCfeatures
#remove less than 24
clean_mouse_level_SCfeatures <- mouse_level_SCfeatures[mouse_level_SCfeatures$Ncells == 24,]
#remove NA
clean_mouse_level_SCfeatures <- clean_mouse_level_SCfeatures[is.na(clean_mouse_level_SCfeatures$total_manual_SC) == FALSE,]
clean_mouse_level_SCfeatures
library(ggplot2)
tot.eq.tot <- ggplot(clean_mouse_level_SCfeatures, aes(y=total_manual_SC, x = cell.bin_size) ) +
geom_point()
tot.eq.tot
tot.eq.tot <- ggplot(clean_mouse_level_SCfeatures, aes(y=total_manual_SC, x = bin_size) ) +
geom_point()
tot.eq.tot
tot.eq.tot2 <- ggplot(clean_mouse_level_SCfeatures, aes(y=total_manual_SC, x = skel_size) ) +
geom_point()
tot.eq.tot2
tot.eq.tot
tot.eq.tot <- ggplot(clean_mouse_level_SCfeatures, aes(y=total_manual_SC, x = bin_size, color=fileName) ) +
geom_point()
tot.eq.tot
tot.eq.tot2 <- ggplot(clean_mouse_level_SCfeatures, aes(y=total_manual_SC, x = skel_size, color=fileName) ) +
geom_point()
tot.eq.tot2
cor(clean_mouse_level_SCfeatures$total_manual_SC, clean_mouse_level_SCfeatures$bin_size)
cor(clean_mouse_level_SCfeatures$total_manual_SC, clean_mouse_level_SCfeatures$skel_size)
mouse_level_SCfeatures
View(Chrm1_DF)
View(hand_measures)
#set up data
setwd("C:/Users/alpeterson7/Documents/MatLabChrmMeasures/")
load(file="data/BivData.RData")
View(BivData)
View(BivData)
RWSkel_Data_File = read.csv("data/SCskel_output_apr17.csv")
View(RWSkel_Data_File)
colnames(RWSkel_Data_File)
RWSkel_Data_File$fileName <- RWSkel_Data_File$Original.Name
#RW file has .tif suffix, remove
for(i in 1:length(RWSkel_Data_File$Original.Name)){
#print(i)
clean.name = strsplit(RWSkel_Data_File$Original.Name[i], split=".tif")[[1]]
RWSkel_Data_File$fileName[i] <- clean.name
}
RWSkel_Data_File$Original.Name <- as.character(RWSkel_Data_File$Original.Name)
#RW file has .tif suffix, remove
for(i in 1:length(RWSkel_Data_File$Original.Name)){
#print(i)
clean.name = strsplit(RWSkel_Data_File$Original.Name[i], split=".tif")[[1]]
RWSkel_Data_File$fileName[i] <- clean.name
}
View(RWSkel_Data_File)
#RW file has .tif suffix, remove
for(i in 1:length(RWSkel_Data_File$Original.Name)){
print(i)
clean.name = strsplit(RWSkel_Data_File$Original.Name[i], split=".tif")[[1]]
RWSkel_Data_File$fileName[i] <- clean.name
}
str(RWSkel_Data_File)
strsplit(RWSkel_Data_File$Original.Name[1], split=".tif")
RWSkel_Data_File$Original.Name <- as.character(RWSkel_Data_File$Original.Name)
#RW file has .tif suffix, remove
for(i in 1:length(RWSkel_Data_File$Original.Name)){
print(i)
clean.name = strsplit(RWSkel_Data_File$Original.Name[i], split=".tif")[[1]]
print(clean.name)
RWSkel_Data_File$fileName[i] <- clean.name
}
str(RWSkel_Data_File)
str()
str(clean.name)
RWSkel_Data_File = read.csv("data/SCskel_output_apr17.csv")
RWSkel_Data_File$Original.Name <- as.character(RWSkel_Data_File$Original.Name)
#RW file has .tif suffix, remove
for(i in 1:length(RWSkel_Data_File$Original.Name)){
print(i)
clean.name = strsplit(RWSkel_Data_File$Original.Name[i], split=".tif")[[1]]
print(clean.name)
RWSkel_Data_File$fileName[i] <- clean.name
}
str(RWSkel_Data_File)
colnames(BivData)
matching.images <- RWSkel_Data_File$fileName[(RWSkel_Data_File$fileName %in% BivData$fileName)]
matching.images
matching.image.DF <- BivData[(BivData$fileName %in% RWSkel_Data_File$fileName),]
colnames(matching.image.DF)
#table
mouse_level_SCfeatures <- ddply(matching.image.DF, c("fileName"), summarise,
total_manual_SC = sum(chromosomeLength),
nboxes = max(boxNumber)
#  cell.bin_size = mean(bin_size),   #since there are all the same (cell level measure, use mean/median)
#  cell.skel_size = mean(skel_size)
)
mouse_level_SCfeatures
#merge skel values with BivData
Merge.DF <- merge(matching.image.DF, RWSkel_Data_File, by = "fileName")
View(Merge.DF)
#table
mouse_level_SCfeatures <- ddply(Merge.DF, c("fileName"), summarise,
total_manual_SC = sum(chromosomeLength),
nboxes = max(boxNumber),
cell.bin_size = mean(bin_size),   #since there are all the same (cell level measure, use mean/median)
cell.skel_size = mean(skel_size)
)
colnames(Merge.DF)
#table
mouse_level_SCfeatures <- ddply(Merge.DF, c("fileName"), summarise,
total_manual_SC = sum(chromosomeLength),
nboxes = max(boxNumber),
cell.bin_size = mean(bin),   #since there are all the same (cell level measure, use mean/median)
cell.skel_size = mean(skel)
)
View(mouse_level_SCfeatures)
#just take all the 19-21 object images
#assume they're all pretty good
cleaned.SCfeatures <- mouse_level_SCfeatures[(mouse_level_SCfeatures$nboxes > 18) & (mouse_level_SCfeatures$nboxes < 22), ]
View(cleaned.SCfeatures)
cor(cleaned.SCfeatures$total_manual_SC, cleaned.SCfeatures$cell.skel_size)
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=fileName) ) +
geom_point()
tot.eq.tot2 <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.skel_size, color=fileName) ) +
geom_point()
tot.eq.tot
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=fileName) ) +
geom_point()+ theme(legend.position="none")
tot.eq.tot
tot.eq.tot2 <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.skel_size, color=fileName) ) +
geom_point()+ theme(legend.position="none")
tot.eq.tot2
View(mouse_level_SCfeatures)
hist(mouse_level_SCfeatures$cell.skel_size)
hist(mouse_level_SCfeatures$cell.bin_size)
hist(cleaned.SCfeatures$cell.skel_size)
hist(cleaned.SCfeatures$cell.bin_size)
#remove outliers above 40,000 (bin)
cleaned.SCfeatures <- cleaned.SCfeatures[cleaned.SCfeatures$cell.skel_size < 40000, ]
hist(cleaned.SCfeatures$cell.skel_size)
hist(cleaned.SCfeatures$cell.bin_size)
cor(cleaned.SCfeatures$total_manual_SC, cleaned.SCfeatures$cell.skel_size)
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=fileName) ) +
geom_point()+ theme(legend.position="none")
tot.eq.tot
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=nboxes) ) +
geom_point()+ theme(legend.position="none")
tot.eq.tot
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=as.factor(nboxes) ) ) +
geom_point()+ theme(legend.position="none")
tot.eq.tot
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=as.factor(nboxes) ) ) +
geom_point()  #+ theme(legend.position="none")
tot.eq.tot
#table
mouse_level_SCfeatures <- ddply(Merge.DF, c("fileName"), summarise,
total_manual_SC = sum(chromosomeLength),
nboxes = max(boxNumber),
cell.bin_size = mean(bin),   #since there are all the same (cell level measure, use mean/median)
cell.skel_size = mean(skel),
ratio = total_manual_SC / cell.bin_size,
ratio2 = total_manual_SC / cell.skel_size
)
#just take all the 19-21 object images
#assume they're all pretty good
cleaned.SCfeatures <- mouse_level_SCfeatures[(mouse_level_SCfeatures$nboxes > 18) & (mouse_level_SCfeatures$nboxes < 22), ]
hist(cleaned.SCfeatures$cell.skel_size)
hist(cleaned.SCfeatures$cell.bin_size)
#remove outliers above 40,000 (bin)
cleaned.SCfeatures <- cleaned.SCfeatures[cleaned.SCfeatures$cell.skel_size < 40000, ]
hist(cleaned.SCfeatures$cell.skel_size)
hist(cleaned.SCfeatures$cell.bin_size)
cor(cleaned.SCfeatures$total_manual_SC, cleaned.SCfeatures$cell.skel_size)
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=as.factor(nboxes) ) ) +
geom_point()  #+ theme(legend.position="none")
tot.eq.tot
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=ratio ) +
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=ratio ) ) +
geom_point()  #+ theme(legend.position="none")
tot.eq.tot
View(mouse_level_SCfeatures)
View(cleaned.SCfeatures)
tot.eq.tot <- ggplot(cleaned.SCfeatures, aes(y=total_manual_SC, x = cell.bin_size, color=ratio2 )) +
geom_point()  #+ theme(legend.position="none")
tot.eq.tot
#subset the table by ratio2 (skel - is skeleton, so closer to midline value)
subset.cleaned.SC.feature <- cleaned.SCfeatures[(cleaned.SCfeatures$ratio2 > .75) & (cleaned.SCfeatures$ratio2 < 1.25),]
tot.eq.tot <- ggplot(subset.cleaned.SC.feature, aes(y=total_manual_SC, x = cell.bin_size, color=ratio2 )) +
geom_point()  #+ theme(legend.position="none")
tot.eq.tot
View(subset.cleaned.SC.feature)
Merge.DF$ratio <- Merge.DF$SC.length / Merge.DF$bin_size
View(Merge.DF)
Merge.DF$ratio <- Merge.DF$chromosomeLength / Merge.DF$bin
Merge.DF$ratio2 <- Merge.DF$chromosomeLength / Merge.DF$skel
plain <- ggplot(Merge.DF, aes(y=chromosomeLength, x = PER.cent) ) +
geom_point()
plain
plain <- ggplot(Merge.DF, aes(y=chromosomeLength, x = centromere_PER_Position) ) +
geom_point()
plain
good.cell.list <- Merge.DF$fileName[(Merge.DF$fileName %in% subset.cleaned.SC.feature$fileName)]#
good.cell.list
good.cell.list.DF <- Merge.DF[(Merge.DF$fileName %in% subset.cleaned.SC.feature$fileName),]
plain <- ggplot(good.cell.list.DF, aes(y=chromosomeLength, x = centromere_PER_Position) ) +
geom_point()
plain
colnames(good.cell.list.DF)
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = PER.cent, color=fileName, shape = chromosome.class) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5))
bin.plot.clean.ratio2
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = PER.cent, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5))
bin.plot.clean.ratio2
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5))
bin.plot.clean.ratio2
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5))+xlim(0,.3)
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5))+ xlim(c(0,.3) )
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5)) + xlim(c(0,0.3) )
bin.plot.clean.ratio2
plain
View(good.cell.list.DF)
bin.plot2 <- ggplot(newone, aes(y=ratio, x = chromosomeLength) ) +
geom_point() + xlim(c(0,.5)) + ggtitle("Chromosome archetecture Normalized by binary total SC")
bin.plot2 <- ggplot(good.cell.list.DF, aes(y=ratio, x = chromosomeLength) ) +
geom_point() + xlim(c(0,.5)) + ggtitle("Chromosome archetecture Normalized by binary total SC")
bin.plot2
bin.plot2 <- ggplot(good.cell.list.DF, aes(y=ratio, x = chromosomeLength) ) +
geom_point() + ggtitle("Chromosome archetecture Normalized by binary total SC")
bin.plot2
bin.plot2 <- ggplot(good.cell.list.DF, aes(y=ratio, x = chromosomeLength,color=fileName) ) +
geom_point() + ggtitle("Chromosome archetecture Normalized by binary total SC")
bin.plot2
bin.plot2 <- ggplot(good.cell.list.DF, aes(y=ratio, x = chromosomeLength,color=fileName) ) +
geom_point() + ggtitle("Chromosome archetecture Normalized by binary total SC")+theme(legend.position="none")
bin.plot2
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none")+xlim(c(0,.5)) + xlim(c(0,0.3) )
bin.plot.clean.ratio2
bin.plot.clean.ratio2 <- ggplot(good.cell.list.DF, aes(y=ratio2, x = centromere_PER_Position, color=fileName) ) +
geom_point()+theme(legend.position="none") + xlim(c(0,0.3) ) + ggtitle("") + facet_wrap(~ category)
bin.plot.clean.ratio2
View(good.cell.list.DF)
unique(good.cell.list.DF$fileName)
length(unique(good.cell.list.DF$fileName))
138*20
hand_measure_Mus = read.csv("data/Hand_Measure.csv")
View(hand_measure_Mus)
colnames(hand_measure_Mus)
hand.measure.plain <- ggplot(hand_measure_Mus, aes(y=SC.length, x = X) ) +
geom_point()
hand.measure.plain
hand.measure.plain <- ggplot(hand_measure_Mus, aes(y=SC.length, x = X) ) +
geom_jitter()
hand.measure.plain
hand.measure.plain <- ggplot(hand_measure_Mus, aes(y=SC.length, x = X, color=image.title) ) +
geom_jitter()
hand.measure.plain
hand.measure.plain <- ggplot(hand_measure_Mus, aes(y=SC.length, x = X, color=image.title) ) +
geom_jitter()+theme(legend.position="none")
hand.measure.plain
head(hand_measure_Mus)
good.cell.list <- hand_measure_Mus$image.title[(hand_measure_Mus$image.title %in% RWSkel_Data_File$fileName)]#
Manual.RW.skel.list <- hand_measure_Mus$image.title[(hand_measure_Mus$image.title %in% RWSkel_Data_File$fileName)]#
Manual.RW.skel.list
unique(Manual.RW.skel.list$image.title)
unique(Manual.RW.skel.list)
#21 cells
Manual.RW.skel.DF <- Merge.DF[(Merge.DF$fileName %in% hand_measure_Mus$image.title),]
View(Manual.RW.skel.DF)
#Write a make file that will merge all of the batch files and record the batch
setwd("C:/Users/alpeterson7/Documents/MLH1repo/")
MLH1_data = read.csv("data/AnonData.csv", header=TRUE )
original_DF = MLH1_data
MLH1_data$Original.Name <- as.character(MLH1_data$Original.Name)
MLH1_data$n <- as.character(MLH1_data$n)
MLH1_data$nMLH1.foci<- as.character(MLH1_data$nMLH1.foci)
MLH1_data$quality<- as.character(MLH1_data$quality)
MLH1_data$n <- as.numeric(MLH1_data$n)
MLH1_data$nMLH1.foci<- as.numeric(MLH1_data$nMLH1.foci)
MLH1_data$quality<- as.numeric(MLH1_data$quality)
str(MLH1_data)
#make list of rows that need more data
missing_data_DF <- MLH1_data[(MLH1_data$nMLH1.foci == "" | MLH1_data$quality == ""),]
View(missing_data_DF)
#remove X's and NAs
MLH1_data <- MLH1_data[ !grepl("X", MLH1_data$X) , ]
MLH1_data <- MLH1_data[!(is.na(MLH1_data$nMLH1.foci) | MLH1_data$nMLH1.foci==""), ]
MLH1_data <- MLH1_data[MLH1_data$nMLH1.foci != "X",]
MLH1_data <- MLH1_data[MLH1_data$nMLH1.foci != "x",]
source("src/CommonFunc_MLH1repo.R")
source("src/CommonFunc_MLH1repo.R")
MLH1_data <- add_mouse(MLH1_data)
View(MLH1_data)
MLH1_data$fileName <- (MLH1_data$Original.Name)
MLH1_data <- add_mouse(MLH1_data)
MLH1_data <- add_mouse(MLH1_data)
MLH1_data <- add_category(MLH1_data)
#set the order of categories (female, male) (cast, dom, musc)
#source("src/Func_addStrain.R")
MLH1_data <- add_strain(MLH1_data)
#source("src/Func_addSex.R")
MLH1_data <- add_sex(MLH1_data)
MLH1_data <- add_subsp(MLH1_data)
#add a column with male adjusted MLH1 values (+1 to all males)
MLH1_data$adj_nMLH1.foci <- ifelse(MLH1_data$sex=="male", MLH1_data$nMLH1.foci+1, MLH1_data$nMLH1.foci)
MLH1_data$adj_nMLH1.foci <- as.numeric(MLH1_data$adj_nMLH1.foci)
#Make a mouse level table
AP_mouse_table <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = format(round(   var(adj_nMLH1.foci),3), nsmall=3),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3)
#quality?
)
source('~/MLH1repo/src/setupData_MLH1repo.R', echo=TRUE)
library(plyr)
library(dplyr)
library(raster)#for cV
AP_mouse_table <- add_category(AP_mouse_table)
View(AP_mouse_table)
AP_mouse_table <- add_subsp(AP_mouse_table)
AP_mouse_table <- add_strain(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
View(MLH1_data)
templist= strsplit(MLH1_data$fileName[2], split="_")[[1]]
templist
c = paste(templist[1], templist[2],templist[3], sep = "_")
c
c = paste(templist[2],templist[3], templist[4], sep = "_")
c
MLH1_data <- add_mouse(MLH1_data)
source("src/CommonFunc_MLH1repo.R")
MLH1_data <- add_mouse(MLH1_data)
View(MLH1_data)
#Make a mouse level table
AP_mouse_table <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = format(round(   var(adj_nMLH1.foci),3), nsmall=3),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3)
#quality?
)
AP_mouse_table <- add_category(AP_mouse_table)
AP_mouse_table <- add_strain(AP_mouse_table)
AP_mouse_table <- add_subsp(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
AP_mouse_table
grepl("MSM", MLH1_data$mouse)
View(MLH1_data)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
View(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
View(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_strain(AP_mouse_table)
AP_mouse_table$strain <-  ifelse(grepl("_WSB_", AP_mouse_table$mouse), "WSB",
ifelse(grepl("_G_", AP_mouse_table$mouse), "G",
ifelse(grepl("_LEW", AP_mouse_table$mouse), "LEW",
ifelse(grepl("PWD", AP_mouse_table$mouse), "PWD",
ifelse(grepl("MSM", AP_mouse_table$mouse), "MSM",
ifelse(grepl("KAZ", AP_mouse_table$mouse), "KAZ",
ifelse(grepl("CAST", AP_mouse_table$mouse), "CAST",
ifelse(grepl("HMI", AP_mouse_table$mouse), "HMI",
ifelse(grepl("SPI", AP_mouse_table$mouse), "SPIC",
ifelse(grepl("CAROLI", AP_mouse_table$mouse), "CAROLI",
ifelse(grepl("SPRET", AP_mouse_table$mouse), "SPRET",
"other")))))))))))
AP_mouse_table <- add_sex(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_sex(AP_mouse_table)
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_sex(AP_mouse_table)
#add sex to dataframe
add_sex <- function(dat){
dframe <- dat
dframe$sex <- "other"
dframe$sex <- ifelse(grepl("_f", dframe$mouse), "female",
ifelse(grepl("_m",dframe$mouse), "male", "other"))
dframe$sex<- factor(dframe$sex,levels =c( "female", "male"), order=T )
return(dframe)
}
source("src/CommonFunc_MLH1repo.R")
AP_mouse_table <- add_sex(AP_mouse_table)
#make sure they are all factors
AP_mouse_table$mouse <- as.factor(AP_mouse_table$mouse)
AP_mouse_table$sex <- as.factor(AP_mouse_table$sex)
AP_mouse_table$strain <- as.factor(AP_mouse_table$strain)
AP_mouse_table$subsp <-  as.factor(AP_mouse_table$subsp)
source("src/CommonFunc_MLH1repo.R")
#Make a mouse level table
AP_mouse_table <- ddply(MLH1_data, c("mouse"), summarise,
Nmice = length(unique(mouse)),
Ncells  = length(adj_nMLH1.foci),
mean_co = as.numeric(format(round(  mean(adj_nMLH1.foci), 3 ), nsmall=3) ),
cV = cv(adj_nMLH1.foci),
var = format(round(   var(adj_nMLH1.foci),3), nsmall=3),
sd   = round(sd(adj_nMLH1.foci), 3),
se   = round(sd / sqrt(Ncells), 3)
#quality?
)
AP_mouse_table <- add_strain(AP_mouse_table)
AP_mouse_table <- add_subsp(AP_mouse_table)
AP_mouse_table <- add_category(AP_mouse_table)
AP_mouse_table <- add_sex(AP_mouse_table)
AP_mouse_table <- add_sex(AP_mouse_table)
AP_mouse_table <- add_category(AP_mouse_table)
