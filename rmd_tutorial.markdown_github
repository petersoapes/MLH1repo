kableExtraTutorial
================
April Peterson
August 29, 2017

\`\`\`{r setup, echo=FALSE} library(knitr) library(kableExtra) library(ggplot2) library(dplyr)

setwd("C:/Users/alpeterson7/Documents/MLH1repo")
================================================

load(file="MLH1\_data\_setup.RData")

\`\`\`

This Rmd file displays the boxplots of MLH1 distributions.

\`\`\`{r, echo=FALSE} \#\#FIX ORDER HERE MLH1\_data*s**t**r**a**i**n* &lt; −*f**a**c**t**o**r*(*M**L**H*1<sub>*d*</sub>*a**t**a*strain,levels =c("G", "LEWES", "WSB", "PWD","MSM","CAST"), order=T ) \#order the data frame MLH1\_data &lt;- with(MLH1\_data, MLH1\_data\[order(sex, strain),\]) \#set the order of another column, based on another variable (so that when)

MLH1\_data &lt;- MLH1\_data %&gt;% arrange(strain, sex, mouse) %&gt;% mutate(file.name = factor(file.name)) \#another category that you want the order to match \# sort your dataframe, by the focal categories MLH1\_data*m**o**u**s**e* &lt; −*f**a**c**t**o**r*(*M**L**H*1<sub>*d*</sub>*a**t**a*mouse, levels=unique(MLH1\_data$mouse))

MLH1\_by\_F\_strain &lt;- MLH1\_data\[MLH1\_data$sex == "female", \] MLH1\_by\_M\_strain &lt;- MLH1\_data\[MLH1\_data$sex == "male", \] \`\`\`

Below is a figure of boxplots all mice from current data batches.

\`\`\`{r, echo=FALSE} \#save a figure of boxplots for each mouse bb &lt;- ggplot(MLH1\_data, aes(x = mouse, y = nMLH1.foci)) + geom\_boxplot(data = MLH1\_data, aes(fill = factor(strain), color = factor(sex) ) )

bb \`\`\`

Below are the boxplots for female MLH1 distributions.

\`\`\`{r, echo=FALSE} ff &lt;- ggplot(MLH1\_by\_F\_strain, aes(x = mouse, y = nMLH1.foci)) + geom\_boxplot(data = MLH1\_by\_F\_strain, aes(fill = factor(strain) ) ) ff

\`\`\`

Below are the boxplots for male MLH1 distributions.

`{r, echo=FALSE} mm <- ggplot(MLH1_by_M_strain, aes(x = mouse, y = nMLH1.foci)) + geom_boxplot(data = MLH1_by_F_strain, aes(fill = factor(strain) ) ) mm`

Entering tables is currently broken Rmd.

``` {r}

q_cutoff_table <- ddply(MLH1_data, .(mouse), summarise,
                        total =  length(nMLH1.foci),
                        q5 = sum(as.numeric(quality) >= 4, na.rm = TRUE ), 
                        q_l3 = sum(as.numeric(as.numeric(quality)) <= 4, na.rm = TRUE)
)
q_cutoff_table
```
